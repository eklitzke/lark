# Makefile.in generated by automake 1.10.2 from Makefile.am.
# cpp/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.




pkgdatadir = $(datadir)/lark
pkglibdir = $(libdir)/lark
pkgincludedir = $(includedir)/lark
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = i386-apple-darwin9.6.0
host_triplet = i386-apple-darwin9.6.0
bin_PROGRAMS = larkd$(EXEEXT)
subdir = cpp
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/aclocal/ax_boost_base.m4 \
	$(top_srcdir)/aclocal/ax_boost_filesystem.m4 \
	$(top_srcdir)/aclocal/ax_boost_system.m4 \
	$(top_srcdir)/aclocal/ax_boost_thread.m4 \
	$(top_srcdir)/aclocal/libtool.m4 \
	$(top_srcdir)/aclocal/ltoptions.m4 \
	$(top_srcdir)/aclocal/ltsugar.m4 \
	$(top_srcdir)/aclocal/ltversion.m4 \
	$(top_srcdir)/aclocal/lt~obsolete.m4 \
	$(top_srcdir)/aclocal/pkg.m4 $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
am__installdirs = "$(DESTDIR)$(bindir)"
binPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
PROGRAMS = $(bin_PROGRAMS)
am_larkd_OBJECTS = larkd-larkd.$(OBJEXT) larkd-lark_types.$(OBJEXT) \
	larkd-lark_constants.$(OBJEXT) larkd-LarkService.$(OBJEXT) \
	larkd-lark_service_handler.$(OBJEXT) larkd-player.$(OBJEXT) \
	larkd-indexer.$(OBJEXT)
larkd_OBJECTS = $(am_larkd_OBJECTS)
larkd_LDADD = $(LDADD)
larkd_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) \
	$(larkd_LDFLAGS) $(LDFLAGS) -o $@
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(larkd_SOURCES)
DIST_SOURCES = $(larkd_SOURCES)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /Users/bran/projects/lark/missing --run aclocal-1.10
AMTAR = ${SHELL} /Users/bran/projects/lark/missing --run tar
AR = ar
AUTOCONF = ${SHELL} /Users/bran/projects/lark/missing --run autoconf
AUTOHEADER = ${SHELL} /Users/bran/projects/lark/missing --run autoheader
AUTOMAKE = ${SHELL} /Users/bran/projects/lark/missing --run automake-1.10
AWK = gawk
BOOST_CPPFLAGS = -pthread -I/usr/local/include/boost-1_38
BOOST_FILESYSTEM_LIB = -lboost_filesystem-xgcc40-mt-1_38
BOOST_LDFLAGS = -L/usr/local/lib
BOOST_SYSTEM_LIB = -lboost_system-xgcc40-mt-1_38
BOOST_THREAD_LIB = -lboost_thread-xgcc40-mt-1_38
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CPP = gcc -E
CPPFLAGS = 
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DSYMUTIL = dsymutil
DUMPBIN = 
ECHO_C = \c
ECHO_N = 
ECHO_T = 
EGREP = /usr/bin/grep -E
EXEEXT = 
FGREP = /usr/bin/grep -F
GREP = /usr/bin/grep
GSTREAMER_CFLAGS = -D_REENTRANT -I/opt/local/include/gstreamer-0.10 -I/opt/local/include/glib-2.0 -I/opt/local/lib/glib-2.0/include -I/opt/local/include -I/opt/local/include/libxml2  
GSTREAMER_LIBS = -L/opt/local/lib -lgstbase-0.10 -lgstreamer-0.10 -lgobject-2.0 -lgmodule-2.0 -lgthread-2.0 -lxml2 -lpthread -lz -lm -lglib-2.0 -lintl -liconv  
INSTALL = /opt/local/bin/ginstall -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LD = /usr/libexec/gcc/i686-apple-darwin9/4.0.1/ld
LDFLAGS = 
LIBOBJS = 
LIBS = -lz -lm 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIPO = lipo
LN_S = ln -s
LTLIBOBJS = 
MAKEINFO = ${SHELL} /Users/bran/projects/lark/missing --run makeinfo
MKDIR_P = /opt/local/bin/gmkdir -p
NM = /usr/bin/nm -p
NMEDIT = nmedit
OBJDUMP = false
OBJEXT = o
OTOOL = otool
OTOOL64 = :
PACKAGE = lark
PACKAGE_BUGREPORT = BUG-REPORT-ADDRESS
PACKAGE_NAME = FULL-PACKAGE-NAME
PACKAGE_STRING = FULL-PACKAGE-NAME VERSION
PACKAGE_TARNAME = full-package-name
PACKAGE_VERSION = VERSION
PATH_SEPARATOR = :
PKG_CONFIG = /opt/local/bin/pkg-config
RANLIB = ranlib
SED = /usr/bin/sed
SET_MAKE = 
SHELL = /bin/sh
SQLITE3_CFLAGS = -I/opt/local/include  
SQLITE3_LIBS = -L/opt/local/lib -lsqlite3  
STRIP = strip
TAG_CFLAGS = -I/opt/local/include/taglib  
TAG_LIBS = -L/opt/local/lib -ltag  
THRIFT_CFLAGS = -I/usr/local/include/thrift  
THRIFT_LIBS = -L/usr/local/lib -lthrift  
UUID_CFLAGS = -I/opt/local/include  
UUID_LIBS = -L/opt/local/lib -luuid  
VERSION = 1.0
abs_builddir = /Users/bran/projects/lark/cpp
abs_srcdir = /Users/bran/projects/lark/cpp
abs_top_builddir = /Users/bran/projects/lark
abs_top_srcdir = /Users/bran/projects/lark
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build = i386-apple-darwin9.6.0
build_alias = 
build_cpu = i386
build_os = darwin9.6.0
build_vendor = apple
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = i386-apple-darwin9.6.0
host_alias = 
host_cpu = i386
host_os = darwin9.6.0
host_vendor = apple
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = $(SHELL) /Users/bran/projects/lark/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
lt_ECHO = /bin/echo
mandir = ${datarootdir}/man
mkdir_p = /opt/local/bin/gmkdir -p
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /Users/bran/larkinst
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../
top_builddir = ..
top_srcdir = ..
larkd_CPPFLAGS = -Wall -I$(srcdir)/src $(BOOST_CPPFLAGS) $(THRIFT_CFLAGS) $(TAG_CFLAGS) $(GSTREAMER_CFLAGS) $(UUID_CFLAGS) $(SQLITE3_CFLAGS) $(UUID_CFLAGS)
larkd_LDFLAGS = -Wall $(BOOST_LDFLAGS) $(THRIFT_LIBS) $(TAG_LIBS) $(GSTREAMER_LIBS) $(SQLITE3_LIBS) $(UUID_LIBS) $(BOOST_THREAD_LIB) $(BOOST_SYSTEM_LIB) $(BOOST_FILESYSTEM_LIB)
larkd_SOURCES = larkd.cpp gen/lark_types.cpp gen/lark_constants.cpp gen/LarkService.cpp lark_service_handler.cpp player.cpp indexer.cpp 
all: all-am

.SUFFIXES:
.SUFFIXES: .cpp .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  cpp/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --foreign  cpp/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(MKDIR_P) "$(DESTDIR)$(bindir)"
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	     || test -f $$p1 \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(binPROGRAMS_INSTALL) '$$p' '$(DESTDIR)$(bindir)/$$f'"; \
	   $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(binPROGRAMS_INSTALL) "$$p" "$(DESTDIR)$(bindir)/$$f" || exit 1; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f '$(DESTDIR)$(bindir)/$$f'"; \
	  rm -f "$(DESTDIR)$(bindir)/$$f"; \
	done

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  echo " rm -f $$p $$f"; \
	  rm -f $$p $$f ; \
	done
larkd$(EXEEXT): $(larkd_OBJECTS) $(larkd_DEPENDENCIES) 
	@rm -f larkd$(EXEEXT)
	$(larkd_LINK) $(larkd_OBJECTS) $(larkd_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/larkd-LarkService.Po
include ./$(DEPDIR)/larkd-indexer.Po
include ./$(DEPDIR)/larkd-lark_constants.Po
include ./$(DEPDIR)/larkd-lark_service_handler.Po
include ./$(DEPDIR)/larkd-lark_types.Po
include ./$(DEPDIR)/larkd-larkd.Po
include ./$(DEPDIR)/larkd-player.Po

.cpp.o:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LTCXXCOMPILE) -c -o $@ $<

larkd-larkd.o: larkd.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(larkd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT larkd-larkd.o -MD -MP -MF $(DEPDIR)/larkd-larkd.Tpo -c -o larkd-larkd.o `test -f 'larkd.cpp' || echo '$(srcdir)/'`larkd.cpp
	mv -f $(DEPDIR)/larkd-larkd.Tpo $(DEPDIR)/larkd-larkd.Po
#	source='larkd.cpp' object='larkd-larkd.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(larkd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o larkd-larkd.o `test -f 'larkd.cpp' || echo '$(srcdir)/'`larkd.cpp

larkd-larkd.obj: larkd.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(larkd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT larkd-larkd.obj -MD -MP -MF $(DEPDIR)/larkd-larkd.Tpo -c -o larkd-larkd.obj `if test -f 'larkd.cpp'; then $(CYGPATH_W) 'larkd.cpp'; else $(CYGPATH_W) '$(srcdir)/larkd.cpp'; fi`
	mv -f $(DEPDIR)/larkd-larkd.Tpo $(DEPDIR)/larkd-larkd.Po
#	source='larkd.cpp' object='larkd-larkd.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(larkd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o larkd-larkd.obj `if test -f 'larkd.cpp'; then $(CYGPATH_W) 'larkd.cpp'; else $(CYGPATH_W) '$(srcdir)/larkd.cpp'; fi`

larkd-lark_types.o: gen/lark_types.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(larkd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT larkd-lark_types.o -MD -MP -MF $(DEPDIR)/larkd-lark_types.Tpo -c -o larkd-lark_types.o `test -f 'gen/lark_types.cpp' || echo '$(srcdir)/'`gen/lark_types.cpp
	mv -f $(DEPDIR)/larkd-lark_types.Tpo $(DEPDIR)/larkd-lark_types.Po
#	source='gen/lark_types.cpp' object='larkd-lark_types.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(larkd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o larkd-lark_types.o `test -f 'gen/lark_types.cpp' || echo '$(srcdir)/'`gen/lark_types.cpp

larkd-lark_types.obj: gen/lark_types.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(larkd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT larkd-lark_types.obj -MD -MP -MF $(DEPDIR)/larkd-lark_types.Tpo -c -o larkd-lark_types.obj `if test -f 'gen/lark_types.cpp'; then $(CYGPATH_W) 'gen/lark_types.cpp'; else $(CYGPATH_W) '$(srcdir)/gen/lark_types.cpp'; fi`
	mv -f $(DEPDIR)/larkd-lark_types.Tpo $(DEPDIR)/larkd-lark_types.Po
#	source='gen/lark_types.cpp' object='larkd-lark_types.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(larkd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o larkd-lark_types.obj `if test -f 'gen/lark_types.cpp'; then $(CYGPATH_W) 'gen/lark_types.cpp'; else $(CYGPATH_W) '$(srcdir)/gen/lark_types.cpp'; fi`

larkd-lark_constants.o: gen/lark_constants.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(larkd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT larkd-lark_constants.o -MD -MP -MF $(DEPDIR)/larkd-lark_constants.Tpo -c -o larkd-lark_constants.o `test -f 'gen/lark_constants.cpp' || echo '$(srcdir)/'`gen/lark_constants.cpp
	mv -f $(DEPDIR)/larkd-lark_constants.Tpo $(DEPDIR)/larkd-lark_constants.Po
#	source='gen/lark_constants.cpp' object='larkd-lark_constants.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(larkd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o larkd-lark_constants.o `test -f 'gen/lark_constants.cpp' || echo '$(srcdir)/'`gen/lark_constants.cpp

larkd-lark_constants.obj: gen/lark_constants.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(larkd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT larkd-lark_constants.obj -MD -MP -MF $(DEPDIR)/larkd-lark_constants.Tpo -c -o larkd-lark_constants.obj `if test -f 'gen/lark_constants.cpp'; then $(CYGPATH_W) 'gen/lark_constants.cpp'; else $(CYGPATH_W) '$(srcdir)/gen/lark_constants.cpp'; fi`
	mv -f $(DEPDIR)/larkd-lark_constants.Tpo $(DEPDIR)/larkd-lark_constants.Po
#	source='gen/lark_constants.cpp' object='larkd-lark_constants.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(larkd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o larkd-lark_constants.obj `if test -f 'gen/lark_constants.cpp'; then $(CYGPATH_W) 'gen/lark_constants.cpp'; else $(CYGPATH_W) '$(srcdir)/gen/lark_constants.cpp'; fi`

larkd-LarkService.o: gen/LarkService.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(larkd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT larkd-LarkService.o -MD -MP -MF $(DEPDIR)/larkd-LarkService.Tpo -c -o larkd-LarkService.o `test -f 'gen/LarkService.cpp' || echo '$(srcdir)/'`gen/LarkService.cpp
	mv -f $(DEPDIR)/larkd-LarkService.Tpo $(DEPDIR)/larkd-LarkService.Po
#	source='gen/LarkService.cpp' object='larkd-LarkService.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(larkd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o larkd-LarkService.o `test -f 'gen/LarkService.cpp' || echo '$(srcdir)/'`gen/LarkService.cpp

larkd-LarkService.obj: gen/LarkService.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(larkd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT larkd-LarkService.obj -MD -MP -MF $(DEPDIR)/larkd-LarkService.Tpo -c -o larkd-LarkService.obj `if test -f 'gen/LarkService.cpp'; then $(CYGPATH_W) 'gen/LarkService.cpp'; else $(CYGPATH_W) '$(srcdir)/gen/LarkService.cpp'; fi`
	mv -f $(DEPDIR)/larkd-LarkService.Tpo $(DEPDIR)/larkd-LarkService.Po
#	source='gen/LarkService.cpp' object='larkd-LarkService.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(larkd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o larkd-LarkService.obj `if test -f 'gen/LarkService.cpp'; then $(CYGPATH_W) 'gen/LarkService.cpp'; else $(CYGPATH_W) '$(srcdir)/gen/LarkService.cpp'; fi`

larkd-lark_service_handler.o: lark_service_handler.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(larkd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT larkd-lark_service_handler.o -MD -MP -MF $(DEPDIR)/larkd-lark_service_handler.Tpo -c -o larkd-lark_service_handler.o `test -f 'lark_service_handler.cpp' || echo '$(srcdir)/'`lark_service_handler.cpp
	mv -f $(DEPDIR)/larkd-lark_service_handler.Tpo $(DEPDIR)/larkd-lark_service_handler.Po
#	source='lark_service_handler.cpp' object='larkd-lark_service_handler.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(larkd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o larkd-lark_service_handler.o `test -f 'lark_service_handler.cpp' || echo '$(srcdir)/'`lark_service_handler.cpp

larkd-lark_service_handler.obj: lark_service_handler.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(larkd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT larkd-lark_service_handler.obj -MD -MP -MF $(DEPDIR)/larkd-lark_service_handler.Tpo -c -o larkd-lark_service_handler.obj `if test -f 'lark_service_handler.cpp'; then $(CYGPATH_W) 'lark_service_handler.cpp'; else $(CYGPATH_W) '$(srcdir)/lark_service_handler.cpp'; fi`
	mv -f $(DEPDIR)/larkd-lark_service_handler.Tpo $(DEPDIR)/larkd-lark_service_handler.Po
#	source='lark_service_handler.cpp' object='larkd-lark_service_handler.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(larkd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o larkd-lark_service_handler.obj `if test -f 'lark_service_handler.cpp'; then $(CYGPATH_W) 'lark_service_handler.cpp'; else $(CYGPATH_W) '$(srcdir)/lark_service_handler.cpp'; fi`

larkd-player.o: player.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(larkd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT larkd-player.o -MD -MP -MF $(DEPDIR)/larkd-player.Tpo -c -o larkd-player.o `test -f 'player.cpp' || echo '$(srcdir)/'`player.cpp
	mv -f $(DEPDIR)/larkd-player.Tpo $(DEPDIR)/larkd-player.Po
#	source='player.cpp' object='larkd-player.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(larkd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o larkd-player.o `test -f 'player.cpp' || echo '$(srcdir)/'`player.cpp

larkd-player.obj: player.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(larkd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT larkd-player.obj -MD -MP -MF $(DEPDIR)/larkd-player.Tpo -c -o larkd-player.obj `if test -f 'player.cpp'; then $(CYGPATH_W) 'player.cpp'; else $(CYGPATH_W) '$(srcdir)/player.cpp'; fi`
	mv -f $(DEPDIR)/larkd-player.Tpo $(DEPDIR)/larkd-player.Po
#	source='player.cpp' object='larkd-player.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(larkd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o larkd-player.obj `if test -f 'player.cpp'; then $(CYGPATH_W) 'player.cpp'; else $(CYGPATH_W) '$(srcdir)/player.cpp'; fi`

larkd-indexer.o: indexer.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(larkd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT larkd-indexer.o -MD -MP -MF $(DEPDIR)/larkd-indexer.Tpo -c -o larkd-indexer.o `test -f 'indexer.cpp' || echo '$(srcdir)/'`indexer.cpp
	mv -f $(DEPDIR)/larkd-indexer.Tpo $(DEPDIR)/larkd-indexer.Po
#	source='indexer.cpp' object='larkd-indexer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(larkd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o larkd-indexer.o `test -f 'indexer.cpp' || echo '$(srcdir)/'`indexer.cpp

larkd-indexer.obj: indexer.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(larkd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT larkd-indexer.obj -MD -MP -MF $(DEPDIR)/larkd-indexer.Tpo -c -o larkd-indexer.obj `if test -f 'indexer.cpp'; then $(CYGPATH_W) 'indexer.cpp'; else $(CYGPATH_W) '$(srcdir)/indexer.cpp'; fi`
	mv -f $(DEPDIR)/larkd-indexer.Tpo $(DEPDIR)/larkd-indexer.Po
#	source='indexer.cpp' object='larkd-indexer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(larkd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o larkd-indexer.obj `if test -f 'indexer.cpp'; then $(CYGPATH_W) 'indexer.cpp'; else $(CYGPATH_W) '$(srcdir)/indexer.cpp'; fi`

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(PROGRAMS)
installdirs:
	for dir in "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic clean-libtool mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-exec-am: install-binPROGRAMS

install-html: install-html-am

install-info: install-info-am

install-man:

install-pdf: install-pdf-am

install-ps: install-ps-am

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-binPROGRAMS \
	clean-generic clean-libtool ctags distclean distclean-compile \
	distclean-generic distclean-libtool distclean-tags distdir dvi \
	dvi-am html html-am info info-am install install-am \
	install-binPROGRAMS install-data install-data-am install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-info install-info-am install-man \
	install-pdf install-pdf-am install-ps install-ps-am \
	install-strip installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic mostlyclean-libtool \
	pdf pdf-am ps ps-am tags uninstall uninstall-am \
	uninstall-binPROGRAMS


#gen:
#	rm -rf gen-cpp
#	thrift --gen cpp ../interfaces/lark.thrift
#	mv gen-cpp gen

#clean:
#	rm -rf gen gen-cpp larkd
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
